
# Optin Optout
POST    /arn/:arn/optin                         uk.gov.hmrc.agentpermissions.controllers.OptinController.optin(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, lang: Option[String])
POST    /arn/:arn/optout                        uk.gov.hmrc.agentpermissions.controllers.OptinController.optout(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)
GET     /arn/:arn/optin-status                  uk.gov.hmrc.agentpermissions.controllers.OptinController.optinStatus(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)
GET     /arn/:arn/optin-record-exists           uk.gov.hmrc.agentpermissions.controllers.OptinController.optinRecordExists(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)

# Access Groups
GET     /arn/:arn/access-group-name-check       uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.groupNameCheck(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, name: String)
GET     /arn/:arn/client/:enrolmentKey/groups   uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.getGroupSummariesForClient(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, enrolmentKey)
GET     /arn/:arn/team-member/:userId/groups    uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.getGroupSummariesForTeamMember(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, userId: String)
GET     /arn/:arn/all-groups                    uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.getAllGroupSummaries(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)

# Custom access groups
POST    /arn/:arn/groups                    uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.createGroup(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)
GET     /arn/:arn/groups                    uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.groups(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)
GET     /groups/:gid                        uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.getGroup(gid: String)
GET     /custom-group/:gid                  uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.getCustomGroupSummary(gid: String)
DELETE  /groups/:gid                        uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.deleteGroup(gid: String)
PATCH   /groups/:gid                        uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.updateGroup(gid: String)
PUT     /groups/:gid/add-unassigned         uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.addUnassignedMembers(gid: String)
PATCH   /groups/:id/members/add             uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.addTeamMemberToGroup(id: String)
GET     /group/:gid/clients                 uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.getPaginatedClientsForGroup(gid: String, page: Int, pageSize: Int, search: Option[String], filter: Option[String])
GET     /group/:gid/clients/add             uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.getPaginatedClientsForAddingToGroup(gid: String, page: Int, pageSize: Int, search: Option[String], filter: Option[String])
DELETE  /groups/:gid/clients/:clientId      uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.removeClient(gid: String, clientId: String)
DELETE  /groups/:gid/members/:memberId      uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.removeTeamMember(gid: String, memberId: String)

# TODO: Remove the PATCH version of endpoint below
PATCH   /arn/:arn/sync                   uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.syncWithEacd(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, fullSync: Boolean ?= false)
POST    /arn/:arn/sync                   uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.syncWithEacd(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, fullSync: Boolean ?= false)
GET     /arn/:arn/unassigned-clients     uk.gov.hmrc.agentpermissions.controllers.AccessGroupsController.unassignedClients(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, page: Int ?= 1, pageSize: Int ?= 20, search: Option[String] ?= None,filter: Option[String] ?= None)

# Tax service groups
POST    /arn/:arn/tax-group              uk.gov.hmrc.agentpermissions.controllers.TaxServiceGroupsController.createGroup(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)
GET     /arn/:arn/tax-groups             uk.gov.hmrc.agentpermissions.controllers.TaxServiceGroupsController.groups(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)
GET     /arn/:arn/tax-group/:service     uk.gov.hmrc.agentpermissions.controllers.TaxServiceGroupsController.getGroupByService(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, service: String)
GET     /tax-group/:groupId              uk.gov.hmrc.agentpermissions.controllers.TaxServiceGroupsController.getGroup(groupId: String)
PATCH   /tax-group/:groupId              uk.gov.hmrc.agentpermissions.controllers.TaxServiceGroupsController.updateGroup(groupId: String)
DELETE  /tax-group/:groupId              uk.gov.hmrc.agentpermissions.controllers.TaxServiceGroupsController.deleteGroup(groupId: String)
PATCH   /tax-group/:groupId/members/add  uk.gov.hmrc.agentpermissions.controllers.TaxServiceGroupsController.addTeamMemberToGroup(groupId: String)

GET     /arn/:arn/client-count/available-tax-services    uk.gov.hmrc.agentpermissions.controllers.TaxServiceGroupsController.clientCountForAvailableTaxServices(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)
GET     /arn/:arn/client-count/tax-groups                uk.gov.hmrc.agentpermissions.controllers.TaxServiceGroupsController.clientCountForTaxGroups(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)

# ARN Allow List
GET     /arn-allowed                     uk.gov.hmrc.agentpermissions.controllers.ArnAllowListController.isArnAllowed
GET     /private-beta-invite             uk.gov.hmrc.agentpermissions.controllers.ArnAllowListController.hideBetaInviteCheck
POST    /private-beta-invite/decline     uk.gov.hmrc.agentpermissions.controllers.ArnAllowListController.hideBetaInvite

